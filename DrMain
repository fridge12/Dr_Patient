import javax.swing.*;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.List;

public class DrMain {
	//making new colours
	public static final Color DARK_GREEN = new Color (0,200,0);
	public static final Color DARK_RED = new Color (200,0,0);
	//a frame for login
	JFrame loginFrame;
	//a frame for the admin
	JFrame adminFrame;
	// used to keep track of how many frames are open. So I can quit the entire program once the last frame is closed
	static int frameCounter=0;
	public static void main ( String args[]) {
		DrMain loginObj = new DrMain();
		loginObj.createLoginFrame();
		loginObj.createLoginContents(loginObj.loginFrame);
		
		
		DrMain loginObj2 = new DrMain();
		loginObj2.createLoginFrame();
		loginObj2.createLoginContents(loginObj2.loginFrame);
		
		
			    
	}
	//method to create contents of the login frame
	public void createLoginContents(JFrame frame) {
		//creating the admin button
		JButton adminButton = new JButton("Admin");
		adminButton.setBounds(100, 100, 200, 100);
		adminButton.setBackground(Color.GREEN);
		adminButton.setOpaque(true);
	    adminButton.setBorderPainted(false);
	    	
		/**adminButton.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Toolkit.getDefaultToolkit().beep();
                
               
            }
     });*/
	    
	    //adding a mouse listener to the button so that I can keep the colour changed for the duration of the button being pressed.
		adminButton.addMouseListener(new MouseAdapter (){
			
			//changing colour to dark green when the button is selected
		    public void mousePressed(MouseEvent e) {
		    	adminButton.setBackground(DARK_GREEN);
		    }
			
		    //changing the colour back to green when the button is not selected any more
			public void mouseReleased(MouseEvent e ) {
				adminButton.setBackground(Color.GREEN);
				Toolkit.getDefaultToolkit().beep();
				//printing the object that calls this function
				System.out.println(this.hashCode()+" "+this.getClass());
				frame.setVisible(false);
				
			}

		});
		//printing the object that called createLoginContents
		System.out.println(this.hashCode());
		//adding adminbutton to the frame of the object
		frame.add(adminButton);
		
		
		
		//creating the employee button
		JButton employeeButton = new JButton ("Employee");
		employeeButton.setBounds(300,100,200,100);
		employeeButton.setBackground(Color.RED);
		employeeButton.setOpaque(true);
		employeeButton.setBorderPainted(false);
		employeeButton.addMouseListener(new MouseAdapter(){
			public void mousePressed(MouseEvent e) {
				employeeButton.setBackground(DARK_RED);
				
			}
			
			public void mouseReleased(MouseEvent e) {
				employeeButton.setBackground(Color.RED);
				Toolkit.getDefaultToolkit().beep();
			}
			
		});
		
		//adding employeebutton the frame of the object
		frame.add(employeeButton);
		
		
		
		
	}
	
	//method to create the login frame
	public void createLoginFrame() {
		this.loginFrame= new JFrame("Login Window");
		//adding 1 to frame counter 
		frameCounter++;
		System.out.println(frameCounter);
		//this sets the width to half the width of the screen and the height to half the height of the screen
		this.loginFrame.setSize((int)(Toolkit.getDefaultToolkit().getScreenSize().getWidth()/2),(int)(Toolkit.getDefaultToolkit().getScreenSize().getHeight()/2));
		//this sets the location to the centre of the screen
		this.loginFrame.setLocation((int)(Toolkit.getDefaultToolkit().getScreenSize().getWidth()/4),(int)(Toolkit.getDefaultToolkit().getScreenSize().getHeight()/4) );
		this.loginFrame.setLayout(null); 		
		this.loginFrame.setVisible(true);
		// adding a window listener
		this.loginFrame.addWindowListener(new java.awt.event.WindowAdapter() {
	        @Override
	        public void windowClosing(java.awt.event.WindowEvent windowEvent) {
	        // if the last window is closed then the whole program terminates, else framecounter is decreased by 1	
	          if(frameCounter==1) {
	        	  System.out.println(frameCounter);
	        	  System.exit(0);		          
	          }
	          else {
	        	 frameCounter--;
	        	 System.out.println(frameCounter);
	          }
	        
	        }
	    });
	}
	
	
	//method to create admin frame
	public void createAdminFrame() {
		this.adminFrame = new JFrame("Admin Frame");
		//adding 1 to frame counter
		frameCounter++;
		System.out.println(frameCounter);
		//setting the size of the frame
		this.adminFrame.setSize(500, 500);
		//setting the location
		this.adminFrame.setLocation(100,100);
	}
	

}
